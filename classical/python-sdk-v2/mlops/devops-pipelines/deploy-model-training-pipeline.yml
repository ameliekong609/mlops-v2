# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

name: deploy-model-training-pipeline

variables:
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      # 'main' branch: PRD environment
      - template: ../../config-infra-prod.yml
  - ${{ if ne(variables['Build.SourceBranchName'], 'main') }}:
      # 'develop' or feature branches: DEV environment
      - template: ../../config-infra-dev.yml
  - name: version
    value: python-sdk-v2

trigger: none

pool:
  vmImage: ubuntu-20.04

resources:
  repositories:
    - repository: mlops-templates # Template Repo
      name: mlops-templates
      type: git
      ref: main

stages:
  - stage: DeployTrainingPipeline
    displayName: Deploy Training Pipeline
    jobs:
      - job: DeployTrainingPipeline
        timeoutInMinutes: 120 # how long to run the job before automatically cancelling
        steps:
          - checkout: self
            path: s/
          - task: Bash@3
            displayName: "Create checkout repository folder(s)"
            inputs:
              targetType: "inline"
              script: |
                set -e
                mkdir "$(Build.Repository.Name)"
                mkdir "mlops-templates"
          - checkout: mlops-templates
            path: s/templates/
          - template: templates/aml-cli-v2/install-az-cli.yml@mlops-templates
          - template: templates/aml-cli-v2/install-aml-cli.yml@mlops-templates
          - template: templates/python-sdk-v2/install-requirements.yml@mlops-templates
          - template: templates/aml-cli-v2/connect-to-workspace.yml@mlops-templates
          - template: templates/aml-cli-v2/create-compute.yml@mlops-templates
            parameters:
              cluster_name: cpu-cluster
              size: Standard_DS3_v2
              min_instances: 0
              max_instances: 4
              cluster_tier: low_priority
          - template: templates/${{ variables.version }}/register-environment.yml@mlops-templates
            parameters:
              environment_name: taxi-train-env
              environment_description: "Training Environment for Taxi Pipeline"
              environment_path: data-science/environment/train-conda.yml
              build_type: conda
          - template: templates/${{ variables.version }}/register-data-asset.yml@mlops-templates
            parameters:
              data_name: taxi-data
              data_description: taxi-training-dataset
              data_path: data/taxi-data.csv
              data_type: uri_file
          - template: templates/${{ variables.version }}/run-pipeline.yml@mlops-templates
            parameters:
              pipeline_path: mlops/azureml/train/run_pipeline.py
              experiment_name: taxi-train-pipeline
              data_name: taxi-data
              environment_name: taxi-train-env
              compute_name: cpu-cluster
              enable_monitoring: $(enable_monitoring)
              table_name: "taximonitoring"
