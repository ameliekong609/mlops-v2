# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

name: deploy-model-training-pipeline

variables:
  - template: ../../config-aml.yml
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      # 'main' branch: PRD environment
      - template: ../../config-infra-prod.yml
  - ${{ if ne(variables['Build.SourceBranchName'], 'main') }}:
      # 'develop' or feature branches: DEV environment
      - template: ../../config-infra-dev.yml
  - name: version
    value: python-sdk-v1

trigger: none

pool:
  vmImage: $(ap_vm_image)

resources:
  repositories:
    - repository: mlops-templates # Template Repo
      name: mlops-templates
      type: git
      ref: main

stages:
  - stage: DeployTrainingPipeline
    displayName: Deploy Training Pipeline
    jobs:
      - job: DeployTrainingPipeline
        steps:
          # Setup
          - checkout: self
            path: s/
          - task: Bash@3
            displayName: "Create checkout repository folder(s)"
            inputs:
              targetType: "inline"
              script: |
                set -e
                mkdir "$(Build.Repository.Name)"
                mkdir "mlops-templates"
          - checkout: mlops-templates
            path: s/templates/
          - template: templates/${{ variables.version }}/install-az-cli.yml@mlops-templates
          - template: templates/${{ variables.version }}/install-aml-cli.yml@mlops-templates
          - template: templates/${{ variables.version }}/connect-to-workspace.yml@mlops-templates

          # Environment
          - template: templates/${{ variables.version }}/create-environment.yml@mlops-templates
            parameters:
              environment_name: $(training_env_name)
              build_type: folder
              environment_file: $(training_env_path)

          # Compute
          - template: templates/${{ variables.version }}/get-compute.yml@mlops-templates
            parameters:
              compute_type: training

          # Datasets (images + labels)
          # Images dataset
          - task: Bash@3
            displayName: "Download data"
            inputs:
              targetType: inline
              script: |
                mkdir -p $(training_dataset_local_path)
                curl $(training_dataset_storage_url) | tar xvf - --no-same-owner -C $(training_dataset_local_path)
          - template: templates/${{ variables.version }}/register-dataset.yml@mlops-templates
            parameters:
              data_type: training
          # Labels dataset
          - template: templates/${{ variables.version }}/register-dataset.yml@mlops-templates
            parameters:
              data_type: training
              datasetName: $(labels_dataset_name)
              datasetDescription: $(labels_dataset_description)
              datasetLocalPath: $(labels_dataset_local_path)
              datasetPathOnDatastore: $(labels_dataset_path_on_datastore)
              datasetType: $(labels_dataset_type)

          # Deploy training pipeline
          - template: templates/${{ variables.version }}/deploy-training-pipeline.yml@mlops-templates
          - template: templates/${{ variables.version }}/add-pipeline-to-endpoint.yml@mlops-templates
          - task: Bash@3
            name: export_pipeline_id
            displayName: "Export Pipeline ID"
            inputs:
              targetType: "inline"
              script: |
                echo "##vso[task.setvariable variable=pipeline_id;isOutput=true;]$(pipeline_id)"

        # Run training
      - job: invoke_pipeline
        displayName: "Invoke pipeline"
        pool: server
        timeoutInMinutes: 0
        dependsOn: DeployTrainingPipeline
        variables:
          pipeline_id: $[ dependencies.DeployTrainingPipeline.outputs['export_pipeline_id.pipeline_id'] ]
        steps:
          - task: ms-air-aiagility.vss-services-azureml.azureml-restApi-task.MLPublishedPipelineRestAPITask@0
            displayName: "Invoke AML Pipeline"
            inputs:
              azureSubscription: "$(ado_service_connection_aml_ws)"
              PipelineId: "$(PIPELINE_ID)"
              ExperimentName: "$(training_experiment_name)"
